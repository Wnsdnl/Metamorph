import joblib
from fastapi import FastAPI
import numpy as np

app = FastAPI()

model = joblib.load("xgb_simple_model.pkl")
score = 100

def get_score(*value):
    global score
    
    input_array = np.array([value])
    proba = model.predict_proba(input_array)[0][1]

    # 위험 확률 기반 감점
    if proba > 0.8:
        score -= 3
    elif proba > 0.6:
        score -= 2
    elif proba > 0.4:
        score -= 1
    else:
        score = min(score + 1, 100)  # 정상 주행 회복

    score = max(score, 0)
    print(f'위험도: {proba:.2f} → 현재 점수: {score:.1f}')

get_score(-0.34778166,1.2425287,0.81452656,0.012370021,-1.1258247,0.04757113)
get_score(-0.34778166,1.2425287,0.81452656,0.012370021,-1.1258247,0.04757113)
get_score(0.80679584,0.07024506,0.43300438,-0.084146686,0.08124508,-0.031230485)
get_score(2.7014437,0.6746115,-1.9690061,-0.013286319,0.08307768,-0.06116288)
get_score(-0.34778166,1.2425287,0.81452656,0.012370021,-1.1258247,0.04757113)
get_score(0.26420915,0.6648413,0.9516916,0.044593163,-0.065133505,-0.0025961774)
get_score(0.26999688,1.2195547,-0.45615387,-0.012217305,-0.02115121,0.008399397)
get_score(-0.8309836,0.2668237,-0.95008373,0.013439035,0.0045051314,0.007788532)
get_score(0.25989068,-0.033442706,0.59930515,-0.007941248,0.0032834008,0.01695151)
get_score(-0.024621725,0.37308222,-1.1719751,-0.021991149,-0.008323039,0.0071776668)
get_score(2.7014437,0.6746115,-1.9690061,-0.013286319,0.08307768,-0.06116288)
get_score(2.7014437,0.6746115,-1.9690061,-0.013286319,0.08307768,-0.06116288)


@app.get("/score")
def get_current_score():
    return {"score": int(score)}